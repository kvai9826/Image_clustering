# Build HTML table manually for alignment + speed
image_col_header = "<th>Image</th>" if show_img else ""
table_html = f"""
<style>
    table.custom-table {{
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }}
    table.custom-table th, table.custom-table td {{
        border: 1px solid #444;
        text-align: center;
        padding: 6px;
        vertical-align: middle;
    }}
    table.custom-table img {{
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 4px;
        transition: transform 0.2s ease;
    }}
    table.custom-table img:hover {{
        transform: scale(3.5);
        z-index: 999;
        position: relative;
    }}
    .approved {{ color: green; font-weight: bold; }}
    .denied {{ color: red; font-weight: bold; }}
</style>

<table class="custom-table">
    <thead>
        <tr>
            <th>Refund Status</th>
            <th>Customer ID</th>
            <th>Order ID</th>
            <th>IP</th>
            <th>Billing</th>
            <th>Shipping</th>
            <th>Card Code</th>
            <th>Fast Lane</th>
            <th>FBA</th>
            <th>Prime</th>
            <th>GL</th>
            <th>Payment</th>
            <th>Bank</th>
            <th>Item</th>
            <th>Value ($)</th>
            <th>Damage</th>
            <th>Description</th>
            {image_col_header}
        </tr>
    </thead>
    <tbody>
"""

for _, row in page_data.iterrows():
    refund_class = "approved" if row["refund_status"] == "Approved" else "denied"

    # Image cell
    img_html = ""
    if show_img:
        img_path = os.path.join(IMAGE_FOLDER, f"{row['image_hash']}.png")
        if os.path.exists(img_path):
            with open(img_path, "rb") as f:
                img_b64 = base64.b64encode(f.read()).decode()
            img_html = f'<td><img src="data:image/png;base64,{img_b64}"></td>'
        else:
            img_html = "<td></td>"

    table_html += f"""
        <tr>
            <td class="{refund_class}">{row['refund_status']}</td>
            <td>{row['customer_id']}</td>
            <td>{row['order_id']}</td>
            <td>{row['ip_country_code']}</td>
            <td>{row['billing_country_code']}</td>
            <td>{row['shipping_country_code']}</td>
            <td>{row['credit_card_country_code']}</td>
            <td>{row['fast_lane']}</td>
            <td>{row['isfba']}</td>
            <td>{row['has_prime']}</td>
            <td>{row['gl_code']}</td>
            <td>{row['payment_method']}</td>
            <td>{row['issuing_bank']}</td>
            <td>{row['item_name']}</td>
            <td>{row['value_usd']:.2f}</td>
            <td>{row['damage_classification']}</td>
            <td>{row['description']}</td>
            {img_html}
        </tr>
    """

table_html += "</tbody></table>"

# Render table
st.markdown(table_html, unsafe_allow_html=True)